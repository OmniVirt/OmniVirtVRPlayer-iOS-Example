#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 5.0.1 effective-4.2 (swiftlang-1001.0.82.4 clang-1001.0.46.5)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import AVFoundation;
@import CoreGraphics;
@import Darwin;
@import UIKit;
@import WebKit;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="OmniVirtSDK",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

typedef SWIFT_ENUM(NSInteger, AdState, closed) {
  AdStateNone = 1,
  AdStateLoading = 2,
  AdStateReady = 4,
  AdStateShowing = 5,
  AdStateCompleted = 6,
  AdStateFailed = 0,
};

typedef SWIFT_ENUM(NSInteger, Feature, closed) {
  FeatureCardboard = 2,
  FeatureGyroscope = 1,
};

enum Mode : NSInteger;
@class NSNumber;
@protocol VRPlayerDelegate;
@class NSBundle;
@class NSCoder;

SWIFT_CLASS("_TtC11OmniVirtSDK18FullscreenVRPlayer")
@interface FullscreenVRPlayer : UIViewController
+ (FullscreenVRPlayer * _Nonnull)launchWithContentID:(uint)contentID andAutoplay:(BOOL)autoplay andCardboardMode:(enum Mode)mode SWIFT_WARN_UNUSED_RESULT;
+ (FullscreenVRPlayer * _Nonnull)launchWithContentID:(uint)contentID andAutoplay:(BOOL)autoplay andCardboardMode:(enum Mode)mode andAdSpaceIDNumber:(NSNumber * _Nullable)adSpaceIDNumber SWIFT_WARN_UNUSED_RESULT;
+ (FullscreenVRPlayer * _Nonnull)launchWithContentID:(uint)contentID andAutoplay:(BOOL)autoplay andCardboardMode:(enum Mode)mode andAdSpaceIDNumber:(NSNumber * _Nullable)adSpaceIDNumber andDelegate:(id <VRPlayerDelegate> _Nullable)listener SWIFT_WARN_UNUSED_RESULT;
+ (FullscreenVRPlayer * _Nonnull)launchWithContentID:(uint)contentID andAutoplay:(BOOL)autoplay andCardboardMode:(enum Mode)mode andAdSpaceIDNumber:(NSNumber * _Nullable)adSpaceIDNumber andDelegate:(id <VRPlayerDelegate> _Nullable)listener andMiddlemanURL:(NSString * _Nullable)middleman SWIFT_WARN_UNUSED_RESULT;
- (void)viewDidLoad;
- (void)dismissViewControllerAnimated:(BOOL)flag completion:(void (^ _Nullable)(void))completion;
@property (nonatomic, readonly) UIInterfaceOrientationMask supportedInterfaceOrientations;
@property (nonatomic, readonly) BOOL shouldAutorotate;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSInteger, Mode, closed) {
  ModeOn = 1,
  ModeOff = 0,
};

typedef SWIFT_ENUM(NSInteger, Quality, closed) {
  QualityQuality4K = 4,
  QualityQualityFullHD = 3,
  QualityQualityHD = 2,
  QualityQualitySD = 1,
  QualityQualityUnknown = 0,
};

@class VRQRScannerViewController;

SWIFT_PROTOCOL("_TtP11OmniVirtSDK33VRQRScannerViewControllerDelegate_")
@protocol VRQRScannerViewControllerDelegate
- (void)qrScannerFinishWithScanner:(VRQRScannerViewController * _Nonnull)scanner;
- (void)qrScannerSkipWithScanner:(VRQRScannerViewController * _Nonnull)scanner;
@end

@class VRAd;

SWIFT_PROTOCOL("_TtP11OmniVirtSDK12VRAdDelegate_")
@protocol VRAdDelegate
- (void)adStatusChangedWithAd:(VRAd * _Nonnull)withAd andStatus:(enum AdState)andStatus;
@end


SWIFT_CLASS("_TtC11OmniVirtSDK4VRAd")
@interface VRAd : UIViewController <VRAdDelegate, VRQRScannerViewControllerDelegate>
+ (VRAd * _Nonnull)createWithAdSpaceID:(uint)adSpaceID andViewController:(UIViewController * _Nonnull)controller andListener:(id <VRAdDelegate> _Nonnull)listener SWIFT_WARN_UNUSED_RESULT;
- (void)viewDidLoad;
- (void)loadAd;
- (void)unloadAd;
- (void)show;
- (void)showWithCardboardMode:(enum Mode)mode;
- (BOOL)isLoaded SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) UIInterfaceOrientationMask supportedInterfaceOrientations;
@property (nonatomic, readonly) BOOL shouldAutorotate;
- (void)switchCardBoard;
- (void)qrScannerFinishWithScanner:(VRQRScannerViewController * _Nonnull)scanner;
- (void)qrScannerSkipWithScanner:(VRQRScannerViewController * _Nonnull)scanner;
- (BOOL)isLoading SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isReady SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isShowing SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isCompleted SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isFailed SWIFT_WARN_UNUSED_RESULT;
- (void)adStatusChangedWithAd:(VRAd * _Nonnull)ad andStatus:(enum AdState)status;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


@class WKWebView;
@class WKNavigationAction;

SWIFT_CLASS("_TtC11OmniVirtSDK8VRPlayer")
@interface VRPlayer : UIView <WKNavigationDelegate>
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)layoutSubviews;
- (void)loadWithContentID:(uint)contentID;
- (void)loadWithContentID:(uint)contentID andMiddlemanFileURL:(NSString * _Nonnull)middleman;
- (void)unload;
- (void)play;
- (void)pause;
- (void)expand;
- (void)collapse;
- (void)back;
- (void)enableWithFeature:(enum Feature)feature;
- (void)disableWithFeature:(enum Feature)feature;
- (void)switchSceneWithName:(NSString * _Nonnull)name;
- (void)sendMessageWithType:(NSString * _Nonnull)type andValue:(id _Nullable)value;
- (void)receieveMessageWithType:(NSString * _Nonnull)type;
- (void)unbindWithType:(NSString * _Nonnull)type;
@property (nonatomic, strong) id <VRPlayerDelegate> _Nullable delegate;
- (void)webView:(WKWebView * _Nonnull)webView decidePolicyForNavigationAction:(WKNavigationAction * _Nonnull)navigationAction decisionHandler:(void (^ _Nonnull)(WKNavigationActionPolicy))decisionHandler;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end


SWIFT_PROTOCOL("_TtP11OmniVirtSDK16VRPlayerDelegate_")
@protocol VRPlayerDelegate
- (void)playerLoaded:(VRPlayer * _Nonnull)player withMaximumQuality:(NSInteger)maximum andCurrentQuality:(enum Quality)current andCardboardMode:(enum Mode)mode;
- (void)playerStarted:(VRPlayer * _Nonnull)player;
- (void)playerPaused:(VRPlayer * _Nonnull)player;
- (void)playerEnded:(VRPlayer * _Nonnull)player;
- (void)playerSkipped:(VRPlayer * _Nonnull)player;
- (void)playerDurationChanged:(VRPlayer * _Nonnull)player withValue:(double)value;
- (void)playerProgressChanged:(VRPlayer * _Nonnull)player withValue:(double)value;
- (void)playerBufferChanged:(VRPlayer * _Nonnull)player withValue:(double)value;
- (void)playerSeekChanged:(VRPlayer * _Nonnull)player withValue:(double)value;
- (void)playerCardboardChanged:(VRPlayer * _Nonnull)player withMode:(enum Mode)value;
- (void)playerVolumeChanged:(VRPlayer * _Nonnull)player withLevel:(double)value;
- (void)playerQualityChanged:(VRPlayer * _Nonnull)player withQuality:(enum Quality)value;
- (void)playerExpanded:(VRPlayer * _Nonnull)player;
- (void)playerCollapsed:(VRPlayer * _Nonnull)player;
- (void)playerLatitudeChanged:(VRPlayer * _Nonnull)player withLatitude:(double)value;
- (void)playerLongitudeChanged:(VRPlayer * _Nonnull)player withLongitude:(double)value;
- (void)playerSwitched:(VRPlayer * _Nonnull)player withScene:(NSString * _Nonnull)name withHistory:(NSArray<NSString *> * _Nonnull)history;
- (void)playerMessageReceived:(VRPlayer * _Nonnull)player withType:(NSString * _Nonnull)type andValue:(NSString * _Nonnull)json;
@end


SWIFT_CLASS("_TtC11OmniVirtSDK25VRQRScannerViewController")
@interface VRQRScannerViewController : UIViewController <AVCaptureMetadataOutputObjectsDelegate>
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewWillDisappear:(BOOL)animated;
@property (nonatomic, readonly) BOOL prefersStatusBarHidden;
@property (nonatomic, readonly) UIInterfaceOrientationMask supportedInterfaceOrientations;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop

#elif defined(__ARM_ARCH_7A__) && __ARM_ARCH_7A__
// Generated by Apple Swift version 5.0.1 effective-4.2 (swiftlang-1001.0.82.4 clang-1001.0.46.5)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import AVFoundation;
@import CoreGraphics;
@import Darwin;
@import UIKit;
@import WebKit;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="OmniVirtSDK",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

typedef SWIFT_ENUM(NSInteger, AdState, closed) {
  AdStateNone = 1,
  AdStateLoading = 2,
  AdStateReady = 4,
  AdStateShowing = 5,
  AdStateCompleted = 6,
  AdStateFailed = 0,
};

typedef SWIFT_ENUM(NSInteger, Feature, closed) {
  FeatureCardboard = 2,
  FeatureGyroscope = 1,
};

enum Mode : NSInteger;
@class NSNumber;
@protocol VRPlayerDelegate;
@class NSBundle;
@class NSCoder;

SWIFT_CLASS("_TtC11OmniVirtSDK18FullscreenVRPlayer")
@interface FullscreenVRPlayer : UIViewController
+ (FullscreenVRPlayer * _Nonnull)launchWithContentID:(uint)contentID andAutoplay:(BOOL)autoplay andCardboardMode:(enum Mode)mode SWIFT_WARN_UNUSED_RESULT;
+ (FullscreenVRPlayer * _Nonnull)launchWithContentID:(uint)contentID andAutoplay:(BOOL)autoplay andCardboardMode:(enum Mode)mode andAdSpaceIDNumber:(NSNumber * _Nullable)adSpaceIDNumber SWIFT_WARN_UNUSED_RESULT;
+ (FullscreenVRPlayer * _Nonnull)launchWithContentID:(uint)contentID andAutoplay:(BOOL)autoplay andCardboardMode:(enum Mode)mode andAdSpaceIDNumber:(NSNumber * _Nullable)adSpaceIDNumber andDelegate:(id <VRPlayerDelegate> _Nullable)listener SWIFT_WARN_UNUSED_RESULT;
+ (FullscreenVRPlayer * _Nonnull)launchWithContentID:(uint)contentID andAutoplay:(BOOL)autoplay andCardboardMode:(enum Mode)mode andAdSpaceIDNumber:(NSNumber * _Nullable)adSpaceIDNumber andDelegate:(id <VRPlayerDelegate> _Nullable)listener andMiddlemanURL:(NSString * _Nullable)middleman SWIFT_WARN_UNUSED_RESULT;
- (void)viewDidLoad;
- (void)dismissViewControllerAnimated:(BOOL)flag completion:(void (^ _Nullable)(void))completion;
@property (nonatomic, readonly) UIInterfaceOrientationMask supportedInterfaceOrientations;
@property (nonatomic, readonly) BOOL shouldAutorotate;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSInteger, Mode, closed) {
  ModeOn = 1,
  ModeOff = 0,
};

typedef SWIFT_ENUM(NSInteger, Quality, closed) {
  QualityQuality4K = 4,
  QualityQualityFullHD = 3,
  QualityQualityHD = 2,
  QualityQualitySD = 1,
  QualityQualityUnknown = 0,
};

@class VRQRScannerViewController;

SWIFT_PROTOCOL("_TtP11OmniVirtSDK33VRQRScannerViewControllerDelegate_")
@protocol VRQRScannerViewControllerDelegate
- (void)qrScannerFinishWithScanner:(VRQRScannerViewController * _Nonnull)scanner;
- (void)qrScannerSkipWithScanner:(VRQRScannerViewController * _Nonnull)scanner;
@end

@class VRAd;

SWIFT_PROTOCOL("_TtP11OmniVirtSDK12VRAdDelegate_")
@protocol VRAdDelegate
- (void)adStatusChangedWithAd:(VRAd * _Nonnull)withAd andStatus:(enum AdState)andStatus;
@end


SWIFT_CLASS("_TtC11OmniVirtSDK4VRAd")
@interface VRAd : UIViewController <VRAdDelegate, VRQRScannerViewControllerDelegate>
+ (VRAd * _Nonnull)createWithAdSpaceID:(uint)adSpaceID andViewController:(UIViewController * _Nonnull)controller andListener:(id <VRAdDelegate> _Nonnull)listener SWIFT_WARN_UNUSED_RESULT;
- (void)viewDidLoad;
- (void)loadAd;
- (void)unloadAd;
- (void)show;
- (void)showWithCardboardMode:(enum Mode)mode;
- (BOOL)isLoaded SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) UIInterfaceOrientationMask supportedInterfaceOrientations;
@property (nonatomic, readonly) BOOL shouldAutorotate;
- (void)switchCardBoard;
- (void)qrScannerFinishWithScanner:(VRQRScannerViewController * _Nonnull)scanner;
- (void)qrScannerSkipWithScanner:(VRQRScannerViewController * _Nonnull)scanner;
- (BOOL)isLoading SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isReady SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isShowing SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isCompleted SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isFailed SWIFT_WARN_UNUSED_RESULT;
- (void)adStatusChangedWithAd:(VRAd * _Nonnull)ad andStatus:(enum AdState)status;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


@class WKWebView;
@class WKNavigationAction;

SWIFT_CLASS("_TtC11OmniVirtSDK8VRPlayer")
@interface VRPlayer : UIView <WKNavigationDelegate>
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)layoutSubviews;
- (void)loadWithContentID:(uint)contentID;
- (void)loadWithContentID:(uint)contentID andMiddlemanFileURL:(NSString * _Nonnull)middleman;
- (void)unload;
- (void)play;
- (void)pause;
- (void)expand;
- (void)collapse;
- (void)back;
- (void)enableWithFeature:(enum Feature)feature;
- (void)disableWithFeature:(enum Feature)feature;
- (void)switchSceneWithName:(NSString * _Nonnull)name;
- (void)sendMessageWithType:(NSString * _Nonnull)type andValue:(id _Nullable)value;
- (void)receieveMessageWithType:(NSString * _Nonnull)type;
- (void)unbindWithType:(NSString * _Nonnull)type;
@property (nonatomic, strong) id <VRPlayerDelegate> _Nullable delegate;
- (void)webView:(WKWebView * _Nonnull)webView decidePolicyForNavigationAction:(WKNavigationAction * _Nonnull)navigationAction decisionHandler:(void (^ _Nonnull)(WKNavigationActionPolicy))decisionHandler;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end


SWIFT_PROTOCOL("_TtP11OmniVirtSDK16VRPlayerDelegate_")
@protocol VRPlayerDelegate
- (void)playerLoaded:(VRPlayer * _Nonnull)player withMaximumQuality:(NSInteger)maximum andCurrentQuality:(enum Quality)current andCardboardMode:(enum Mode)mode;
- (void)playerStarted:(VRPlayer * _Nonnull)player;
- (void)playerPaused:(VRPlayer * _Nonnull)player;
- (void)playerEnded:(VRPlayer * _Nonnull)player;
- (void)playerSkipped:(VRPlayer * _Nonnull)player;
- (void)playerDurationChanged:(VRPlayer * _Nonnull)player withValue:(double)value;
- (void)playerProgressChanged:(VRPlayer * _Nonnull)player withValue:(double)value;
- (void)playerBufferChanged:(VRPlayer * _Nonnull)player withValue:(double)value;
- (void)playerSeekChanged:(VRPlayer * _Nonnull)player withValue:(double)value;
- (void)playerCardboardChanged:(VRPlayer * _Nonnull)player withMode:(enum Mode)value;
- (void)playerVolumeChanged:(VRPlayer * _Nonnull)player withLevel:(double)value;
- (void)playerQualityChanged:(VRPlayer * _Nonnull)player withQuality:(enum Quality)value;
- (void)playerExpanded:(VRPlayer * _Nonnull)player;
- (void)playerCollapsed:(VRPlayer * _Nonnull)player;
- (void)playerLatitudeChanged:(VRPlayer * _Nonnull)player withLatitude:(double)value;
- (void)playerLongitudeChanged:(VRPlayer * _Nonnull)player withLongitude:(double)value;
- (void)playerSwitched:(VRPlayer * _Nonnull)player withScene:(NSString * _Nonnull)name withHistory:(NSArray<NSString *> * _Nonnull)history;
- (void)playerMessageReceived:(VRPlayer * _Nonnull)player withType:(NSString * _Nonnull)type andValue:(NSString * _Nonnull)json;
@end


SWIFT_CLASS("_TtC11OmniVirtSDK25VRQRScannerViewController")
@interface VRQRScannerViewController : UIViewController <AVCaptureMetadataOutputObjectsDelegate>
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewWillDisappear:(BOOL)animated;
@property (nonatomic, readonly) BOOL prefersStatusBarHidden;
@property (nonatomic, readonly) UIInterfaceOrientationMask supportedInterfaceOrientations;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop

#endif
